[{"categories":["随手笔记"],"content":"DNS64是与NAT64搭配使用的，原理很简单，修改你的DNS到DNS64提供者的DNS，当你发出向解析到IPv4的域名的请求后，DNS会将IPv4地址按照一定格式嵌入IPv6地址中；这个返回IPv6地址会指向NAT64的服务器，NAT64网关会按照它包含的信息获取IPv4的数据并转发给你，这样一来你就能够直接访问IPv4的网站了。 ","date":"2021-01-12","objectID":"/ipv6toipv4/:0:0","tags":["ipv6","linux","github","vps"],"title":"纯IPV6访问IPV4","uri":"/ipv6toipv4/"},{"categories":["随手笔记"],"content":"DNS http://www.trex.fi/2011/dns64.html 2001:67c:2b0::4 2001:67c:2b0::6 https://go6lab.si/current-ipv6-tests/nat64dns64-public-test/ 2001:67c:27e4:15::6411 2001:67c:27e4::64 一般修改/etc/resolv.conf的namesever值即可. DNS64的好处是配置方便。弊端服务商会记录你三天的浏览记录以防止用于不法用途，且NAT64服务器到你的服务器速度未必非常理想。 ","date":"2021-01-12","objectID":"/ipv6toipv4/:1:0","tags":["ipv6","linux","github","vps"],"title":"纯IPV6访问IPV4","uri":"/ipv6toipv4/"},{"categories":["随手笔记"],"content":"一键写入DNS 写入前建议先备份/etc/resolv.conf mv /etc/resolv.conf /etc/resolv.conf.bak echo -e \"nameserver 2001:67c:2b0::4\\nnameserver 2001:67c:2b0::6\" \u003e /etc/resolv.conf ","date":"2021-01-12","objectID":"/ipv6toipv4/:2:0","tags":["ipv6","linux","github","vps"],"title":"纯IPV6访问IPV4","uri":"/ipv6toipv4/"},{"categories":["随手笔记"],"content":"垃圾VPS套CloudFlare优选ip可堪一战 ","date":"2021-01-12","objectID":"/vpss/:0:0","tags":["vps","ssh","便宜"],"title":"垃圾VPS可堪一战","uri":"/vpss/"},{"categories":["随手笔记"],"content":"GCORE 88.00 RUB / Month 按天计费。 Khabarovsk 伯力 1x|512MB|7GB SSD|100M|500GB 电信，联通直联，延迟低 Amsterdam 阿姆斯特丹 1x|512MB|7GB SSD|500M|1000GB 便宜，量大，欧洲中心 visa充卢布，支付宝只能充欧元不划算 ","date":"2021-01-12","objectID":"/vpss/:1:0","tags":["vps","ssh","便宜"],"title":"垃圾VPS可堪一战","uri":"/vpss/"},{"categories":["随手笔记"],"content":"Dedipath Los Angeles 洛杉矶 1x|512MB|10 GB SSD|1 Gbps|Unmetered $20 $10/YR(半价优惠码:LRA2SXDI20 ) 美西|便宜|无限量 ","date":"2021-01-12","objectID":"/vpss/:2:0","tags":["vps","ssh","便宜"],"title":"垃圾VPS可堪一战","uri":"/vpss/"},{"categories":["随手笔记"],"content":"EUserv Thüringen DE 德国 图林根 1x|1GB|10GB SSD|1G|1000GB 免费|纯IPV6|一个月Github Actions ","date":"2021-01-12","objectID":"/vpss/:3:0","tags":["vps","ssh","便宜"],"title":"垃圾VPS可堪一战","uri":"/vpss/"},{"categories":["随手笔记"],"content":"Scaleway Amsterdam 阿姆斯特丹 1x|1G|10GB NVMe|100M|Unmetered 便宜，量大，欧洲中心 0.0025 €/hourIPV6 0.0005 €/hour × 24 × 31 = 0.372 €/m (?+税?) 修改ssh端口 vi /etc/ssh/sshd_config i Port 2222 #Port 22=\u003ePort xxx esc :wq systemctl restart sshd ","date":"2021-01-12","objectID":"/vpss/:4:0","tags":["vps","ssh","便宜"],"title":"垃圾VPS可堪一战","uri":"/vpss/"},{"categories":["随手笔记"],"content":"套壳机场越来越差，Xray套用CloudFlare优选ip可堪一战 ","date":"2021-01-12","objectID":"/xraybycdn/:0:0","tags":["xray","cloudflare","优选ip"],"title":"Xray套用CloudFlare优选ip","uri":"/xraybycdn/"},{"categories":["随手笔记"],"content":"Debian X64 开启BBR加速 echo \"net.core.default_qdisc=fq\" \u003e\u003e /etc/sysctl.conf echo \"net.ipv4.tcp_congestion_control=bbr\" \u003e\u003e /etc/sysctl.conf sysctl -p lsmod | grep bbr OpenVZ平台Google BBR加速TCP之Rinetd方式 #适用于单网卡（单IP）服务器： wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu.sh bash tcp_nanqinlang-rinetd-debianorubuntu.sh #如果提示only support OpenVZ !，则使用下面这个脚本 wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.sh bash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.sh #适用于多网卡（多IP）服务器，会为所有网卡（所有IP）提供加速： wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.sh bash tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.sh #如果提示only support OpenVZ !，则使用下面这个脚本 wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh bash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh 接着按照提示完成操作。 搭建Xray 更新系统 apt update -y #更新 apt install -y wget #安装工具组件 执行Xray安装脚本 wget -P /root -N --no-check-certificate \"https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh\" \u0026\u0026 chmod 700 /root/install.sh \u0026\u0026 /root/install.sh 该脚本运行一次以后，命令行输入 vasma 可重复调出该脚本使用。 选择Xray CloudFlare 解析ip时，先关闭CDN，部署完毕，域名能打开伪装页后再激活小云朵，在SSL/TLS中要选完全（端到端加密，使用服务器上的自签名证书） 部分vps在重装系统后nginx会提示80端口被占用，输入下面命令强行释放80端口 CMD=`lsof -i:\"80\" | awk '{print $1}' | grep -v \"COMMAND\" | sort -u` \u0026\u0026 systemctl disable ${CMD} \u0026\u0026 systemctl stop ${CMD} \u0026\u0026 killall -9 ${CMD} 其余按照提示完成操作。 找到===================VLESS WS TLS CDN===========================项，Port,id,tls,host,path为有效参数。 设置参数 下载better-cloudflare-ip 相应版本，运行相应脚本，获取优质ip。 地址 \u003c== 优质ip 端口 \u003c== Port id \u003c== id 流控 \u003c== 加密 \u003c== none 协议 \u003c== ws/websocket 伪装 \u003c== none 伪装域名 \u003c== host path \u003c== path tls \u003c== tls 证书验证 \u003c== false ","date":"2021-01-12","objectID":"/xraybycdn/:1:0","tags":["xray","cloudflare","优选ip"],"title":"Xray套用CloudFlare优选ip","uri":"/xraybycdn/"},{"categories":null,"content":"随手笔记 ","date":"2021-01-11","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":["随手笔记"],"content":"因为用Go，所以预料可以省很多事，要比Hexo省心，不懂Ruby,Jekyll也就无爱了。 下载 [Github]https://github.com/gohugoio/hugo/releases 直接hugo_0.xx.0_Windows-64bit.zip hugo.exe去掉.exe 放在%PATH里，Git Bash也能正常调用。 运行 hugo new site ./blog #创建文件夹 cd cd blog/themes #切换到主题文件夹 git clone https://github.com/dillonzq/LoveIt #https://themes.gohugo.io下有更多主题选择 cd .. cp themes/LoveIt/exampleSite/config.toml ./ #修改config.toml信息为你自己博客信息 hugo new posts/first.md #编写文章 调试 hugo -D #直接生成静态文件 hugo server -D #生成静态文件并本地部署调试 推送 cd blog/public git init #要预先建个名为xxx.github.io的respository git remote add origin https://github.com/xxx/xxx.github.io.git #xxxGithub用户名 git add -A git commit -m \"first commit\" git push -u origin master 其它 推送出错 #本地和远端不同步时，从远端更新本地文件,远程的和本地的合并 git merge origin/master #本地文件删除后标记'del'后git push删除远端文件 git commit -m 'del' #强制git push git push -f origin master CDN加速 https://cdn.jsdelivr.net/gh/xxx/xxx.github.io/* CloudFlare用cname转发，先灰云，后黄云 乱七八糟 hugo new posts/*.md 无内容会报错 config.toml 中 enableGitInfo = false ","date":"2021-01-11","objectID":"/hugotest/:0:0","tags":["hugo","windows","github","静态"],"title":"Windows下hugo小试","uri":"/hugotest/"}]